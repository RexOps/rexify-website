% layout 'default';
% title '(R)?ex - 简化系统管理和数据中心自动化的框架';


<div style="float: left"> <!-- needed for bootstrap ... -->
<div class="row-fluid">
   <div class="span4">
      <h2>为什么使用 Rex?</h2>
      <ul>
         <li>如果你要做一个任务，运行两次以上，请自动化它吧 !</li>
         <li>再也不会忘记安装步骤了。</li>
         <li>自动化可以减少失败的风险，让你干自己想干的活。</li>
      </ul>
   </div><!--/span-->
   <div class="span4">
      <h2>势</h2>
      <ul>
         <li>基于 SSH，无需额外部署客户端</li>
         <li>无缝集成，没有冲突</li>
         <li>易用易扩展</li>
         <li>入门快，十分钟 Perl 基础就够</li>
      </ul>
   </div><!--/span-->
   <div class="span4">
      <h2>开放源代码</h2>
      <p>我们相信开源coder 的想法.所以Rex 全部代码都是给予Apache 2.0 的许可协议开源</p>
      <p>你可以加入我们社区让Rex 更加的完美.</p>
   </div><!--/span-->
</div><!--/row-->

<div class="row-fluid">
   <div class="span4">
      <!-- <p><a class="btn" href="#">查看细节 &raquo;</a></p> -->
   </div><!--/span-->
   <div class="span4">
      <p><a class="btn" href="/howtos/perl.html">Rex 只需少量的Perl 知识 &raquo;</a></p>
   </div><!--/span-->
   <div class="span4">
      <p><a class="btn" href="/contribute">查看细节文档 &raquo;</a></p>
   </div><!--/span-->
</div><!--/row-->
</div>

<h2>Uptime?</h2>
<p>这个命令行例子将在指定的所有主机上如(<code>frontend01</code>, <code>frontend02</code>, ...)执行<code>uptime</code>。</p>
<pre><code class="bash">$ rex -H "frontend[01..15] middleware[01..05] db[01..04]" -e "say run 'uptime'"
</code></pre>

<p>统一效果，基于 <i>Rexfile</i> 文件的话：</p>
<pre><code class="perl">use Rex -feature =&gt; ['1.0'];

desc 'Get uptime';
task 'uptime', sub {
   say run 'uptime';
};
</code></pre>

<p>现在你可以用这个命令运行你的任务</p>
<pre><code class="bash">$ rex -H "frontend[01..15] middleware[01..05] db[01..04]" uptime
</code></pre>

<h2>保持你的配置文件同步</h2>
<p>这个例子将在 5 个 apache 服务器上保持配置文件同步。如果配置文件改变了，他会自动 reload 服务。</p>
<p>如果这个任务在一个未初始化(还没安装 Apache)的机器上运行，它将首先安装apache。</p>


<pre><code class="perl">use Rex -feature =&gt; ['1.0'];

user 'root';
group frontend =&gt; 'frontend[01..05]';

desc 'Prepare frontend server';
task 'prepare', group =&gt; 'frontend', sub {
  pkg 'apache2',
    ensure =&gt; 'present';

  service 'apache2',
    ensure =&gt; 'started';
};

desc 'Keep configuration in sync';
task 'configure', group =&gt; 'frontend', sub {
  needs 'prepare';

  file '/etc/apache2/apache2.conf',
    source    =&gt; 'files/etc/apache2/apache2.conf',
    on_change =&gt; sub { service apache2 =&gt; 'reload'; };
};
</code></pre>

<h2>在 sudo 下执行 ?</h2>
<p>你也可以在 <code>sudo</code> 下 运行任何的任务. 只需要定义 sudo 的密码然后激活 sudo。</p>
<pre><code class="perl">use Rex -feature =&gt; ['1.0'];

user 'ubuntu';
group frontend =&gt; 'frontend[01..05]';
sudo TRUE;
sudo_password 'mysudopw';

desc 'Prepare frontend servers';
task 'prepare', group =&gt; 'frontend', sub {
  pkg 'apache2',
    ensure =&gt; 'latest';

  service 'apache2',
    ensure =&gt; 'started';
};

desc 'Keep configuration in sync';
task 'configure', group =&gt; 'frontend', sub {
  needs 'prepare';

  file '/etc/apache2/apache2.conf',
    source    =&gt; 'files/etc/apache2/apache2.conf',
    on_change =&gt; sub { service apache2 =&gt; 'reload'; };
};
</code></pre>
