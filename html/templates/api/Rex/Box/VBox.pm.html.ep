% layout 'default';
% title '';

% content_for header => begin
      <meta name="description" content="This is a Rex/Boxes module to use VirtualBox VMs.">
      <meta name="keywords" content="Rex, API, Documentation">
% end 


<!-- INDEX BEGIN -->
<div name="index">
<h1>TABLE OF CONTENTS</h1>

<ul>

	<li><a href="#description">DESCRIPTION</a></li>
	<li><a href="#examples">EXAMPLES</a></li>
	<li><a href="#methods">METHODS</a></li>
</ul>


</div>
<!-- INDEX END -->

<p>
</p>
<h2>DESCRIPTION</h2>
<p>This is a Rex/Boxes module to use VirtualBox VMs.</p>
<p>
</p>

<h2>EXAMPLES</h2>
<p>To use this module inside your Rexfile you can use the following commands.</p>
<pre><code class="perl">
 use Rex::Commands::Boxes;
 set box =&gt; &quot;VBox&quot;;
   
 task &quot;prepare_box&quot;, sub {
    box {
       my ($box) = @_;
          
       $box-&gt;name(&quot;mybox&quot;);
       $box-&gt;url(&quot;<a href="http://box.rexify.org/box/ubuntu-server-12.10-amd64.ova&quot">http://box.rexify.org/box/ubuntu-server-12.10-amd64.ova&quot</a>;);
          
       $box-&gt;network(1 =&gt; {
          type =&gt; &quot;nat&quot;,
       });
          
       $box-&gt;network(1 =&gt; {
          type =&gt; &quot;bridged&quot;,
          bridge =&gt; &quot;eth0&quot;,
       });
           
       $box-&gt;forward_port(ssh =&gt; [2222, 22]);
          
       $box-&gt;share_folder(myhome =&gt; &quot;/home/myuser&quot;);
           
       $box-&gt;auth(
          user =&gt; &quot;root&quot;,
          password =&gt; &quot;box&quot;,
       );
           
       $box-&gt;setup(&quot;setup_task&quot;);
    };
 };</code></pre>
<p>If you want to use a YAML file you can use the following template.</p>
<pre><code class="perl">
 type: VBox
 vms:
    vmone:
       url: <a href="http://box.rexify.org/box/ubuntu-server-12.10-amd64.ova">http://box.rexify.org/box/ubuntu-server-12.10-amd64.ova</a>
       forward_port:
          ssh:
             - 2222
             - 22
       share_folder:
          myhome: /home/myhome
       setup: setup_task</code></pre>
<p>And then you can use it the following way in your Rexfile.</p>
<pre><code class="perl">
 use Rex::Commands::Box init_file =&gt; &quot;file.yml&quot;;
    
 task &quot;prepare_vms&quot;, sub {
    boxes &quot;init&quot;;
 };</code></pre>
<p>
</p>

<h2>METHODS</h2>
<p>See also the Methods of Rex::Box::Base. This module inherits all methods of it.</p>
<ul>
<li><strong>new(name =&gt; $vmname)</strong></li>


<p>Constructor if used in OO mode.</p>
<pre><code class="perl">
 my $box = Rex::Box::VBox-&gt;new(name =&gt; &quot;vmname&quot;);</code></pre>

<li><strong>forward_port(%option)</strong></li>


<p>Set ports to be forwarded to the VM. This only work with VirtualBox in NAT network mode.</p>
<pre><code class="perl">
 $box-&gt;forward_port(
    name =&gt; [$from_host_port, $to_vm_port],
    name2 =&gt; [$from_host_port_2, $to_vm_port_2],
    ...
 );</code></pre>

<li><strong>share_folder(%option)</strong></li>


<p>Creates a shared folder inside the VM with the content from a folder from the Host machine. This only works with VirtualBox.</p>
<pre><code class="perl">
 $box-&gt;share_folder(
    name =&gt; &quot;/path/on/host&quot;,
    name2 =&gt; &quot;/path_2/on/host&quot;,
 );</code></pre>

<li><strong>info</strong></li>


<p>Returns a hashRef of vm information.</p>

<li><strong>ip</strong></li>


<p>This method return the ip of a vm on which the ssh daemon is listening.</p>

</ul>




