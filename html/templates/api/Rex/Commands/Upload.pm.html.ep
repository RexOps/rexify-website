% layout 'default';
% title 'Rex::Commands::Upload - Upload a local file to a remote server';

% content_for header => begin
      <meta name="description" content="With this module you can upload a local file via sftp to a remote host.">
      <meta name="keywords" content="Rex, API, Documentation">
% end 


<!-- INDEX BEGIN -->
<div name="index">
<h1>目录</h1>

<ul>

	<li><a href="#name">名称</a></li>
	<li><a href="#description">摘要</a></li>
	<li><a href="#synopsis">例子</a></li>
	<li><a href="#exported_functions">导出函数</a></li>
</ul>


</div>
<!-- INDEX END -->

<p>
</p>
<h2>名称</h2>
<p>Rex::Commands::Upload - 上传文件</p>
<p>
</p>

<h2>摘要</h2>
<p>此模块可通过sftp上传文件。</p>
<p>
</p>

<h2>例子</h2>
<pre><code class="perl">
 task "upload", "remoteserver", sub {
    upload "localfile", "/remote/file";
 };</code></pre>
<p>
</p>

<h2>导出函数</h2>
<ul>
<li><strong>upload($local, $remote)</strong></li>


<p>如果$remote是目录，将会上传至此目录中。</p>
<pre><code class="perl">
 task "upload", "remoteserver", sub {
    upload "localfile", "/path";
 };</code></pre>
<p>This function supports the following hooks:</p>
<ul>
<li><strong>before</strong></li>


<p>This gets executed before everything is done. The return value of this hook overwrite the original parameters of the function-call.</p>

<li><strong>before_change</strong></li>


<p>This gets executed right before the new file is written.</p>

<li><strong>after_change</strong></li>


<p>This gets executed right after the file was written.</p>

<li><strong>after</strong></li>


<p>This gets executed right before the <a href="#upload">upload()</a> function returns.</p>

</ul>

</ul>




