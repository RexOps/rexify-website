% layout 'default';
% title 'Rex::Commands::Gather - Hardware and Information gathering';

% content_for header => begin
      <meta name="description" content="With this module you can gather hardware and software information.">
      <meta name="keywords" content="Rex, API, Documentation">
% end 


<!-- INDEX BEGIN -->
<div name="index">
<h1>目录</h1>

<ul>

	<li><a href="#name">名称</a></li>
	<li><a href="#description">摘要</a></li>
	<li><a href="#synopsis">例子</a></li>
	<li><a href="#exported_functions">导出函数</a></li>
</ul>


</div>
<!-- INDEX END -->

<p>
</p>
<h2>名称</h2>
<p>Rex::Commands::Gather - 硬件及系统信息收集</p>
<p>
</p>

<h2>摘要</h2>
<p>此模块可以收集硬件及系统软件信息。</p>
<p>
</p>

<h2>例子</h2>
<pre><code class="perl">
 operating_system_is("SuSE");</code></pre>
<p>
</p>

<h2>导出函数</h2>
<ul>
<li><strong>get_operating_system</strong></li>


<p>返回当前系统名称。</p>
<pre><code class="perl">

 task "get-os", "server01", sub {
    say get_operating_system();
 };</code></pre>

<li><strong>get_system_information</strong></li>


<p>返回系统信息的 hash。这些信息也可以用于模板函数中。</p>

<li><strong>dump_system_information</strong></li>


<p>This function dumps all known system information on stdout。</p>

<li><strong>operating_system_is($string)</strong></li>


<p>如果操作系统类型是 $string ，返回 1 。</p>
<pre><code class="perl">

 task "is_it_suse", "server01", sub {
    if( operating_system_is("SuSE") ) {
       say "This is a SuSE system.";
    }
 };</code></pre>

<li><strong>operating_system_version()</strong></li>


<p>返回操作系统版本号为整形。如：会转换 5.10 为 510, 10.04 为 1004 或 6.0.3 为 603。</p>
<pre><code class="perl">

 task "prepare", "server01", sub {
    if( operating_system_version() &gt;= 510 ) {
       say "OS Release is higher or equal to 510";
    }
 };</code></pre>

<li><strong>operating_system_release()</strong></li>


<p>Will return the os release number as is.</p>
<pre><code class="perl">

=cut</code></pre>
<p>sub operating_system_release {
   my ($os) = @_;
   return Rex::Hardware::Host-&gt;get_operating_system_version();
}</p>

<li><strong>network_interfaces</strong></li>


<p>返回所有网络接口及配置的hash引用。</p>
<pre><code class="perl">
 task "get_network_information", "server01", sub {
    my $net_info = network_interfaces();
 };</code></pre>
<p>You can iterate over the devices as follow</p>
<pre><code class="perl">
 my $net_info = network_interfaces();
 for my $dev ( keys %{ $net_info } ) {
    say "$dev has the ip: " . $net_info-&gt;{$dev}-&gt;{"ip"} . " and the netmask: " . $net_info-&gt;{$dev}-&gt;{"netmask"};
 }</code></pre>

<li><strong>memory</strong></li>


<p>返回内存信息的hash引用。</p>
<pre><code class="perl">
 task "get_memory_information", "server01", sub {
    my $memory = memory();
     
    say "Total:   " . $memory-&gt;{"total"};
    say "Free:    " . $memory-&gt;{"free"};
    say "Used:    " . $memory-&gt;{"used"};
    say "Cached:  " . $memory-&gt;{"cached"};
    say "Buffers: " . $memory-&gt;{"buffers"};
 };</code></pre>

<li><strong>is_freebsd</strong></li>


<p>如果系统是 FreeBSD，返回真。</p>
<pre><code class="perl">
 task "foo", "server1", "server2", sub {
    if(is_freebsd) {
       say "This is a freebsd system...";
    }
    else {
       say "This is not a freebsd system...";
    }
 };</code></pre>

<li><strong>is_redhat</strong></li>


<pre><code class="perl">
 task "foo", "server1", sub {
    if(is_redhat) {
       # do something on a redhat system (like RHEL, Fedora, CentOS, Scientific Linux
    }
 };</code></pre>

<li><strong>is_suse</strong></li>


<pre><code class="perl">
 task "foo", "server1", sub {
    if(is_suse) {
       # do something on a suse system
    }
 };</code></pre>

<li><strong>is_mageia</strong></li>


<pre><code class="perl">
 task "foo", "server1", sub {
    if(is_mageia) {
       # do something on a mageia system
    }
 };</code></pre>

<li><strong>is_debian</strong></li>


<pre><code class="perl">
 task "foo", "server1", sub {
    if(is_debian) {
       # do something on a debian system
    }
 };</code></pre>

<li><strong>is_alt</strong></li>


<pre><code class="perl">
 task "foo", "server1", sub {
    if(is_alt) {
       # do something on a ALT Linux system
    }
 };</code></pre>

<li><strong>is_netbsd</strong></li>


<p>如果系统是NetBSD，返回真。</p>
<pre><code class="perl">
 task "foo", "server1", "server2", sub {
    if(is_netbsd) {
       say "This is a netbsd system...";
    }
    else {
       say "This is not a netbsd system...";
    }
 };</code></pre>

<li><strong>is_openbsd</strong></li>


<p>如果系统是OpenBSD，返回真。</p>
<pre><code class="perl">
 task "foo", "server1", "server2", sub {
    if(is_openbsd) {
       say "This is an openbsd system...";
    }
    else {
       say "This is not an openbsd system...";
    }
 };</code></pre>

<li><strong>is_linux</strong></li>


<p>如果系统是Linux，返回真。</p>
<pre><code class="perl">
 task "prepare", "server1", "server2", sub {
    if(is_linux) {
      say "This is a linux system...";
    }
    else {
      say "This is not a linux system...";
    }
 };</code></pre>

<li><strong>is_bsd</strong></li>


<p>如果系统是BSD，返回真。</p>
<pre><code class="perl">
 task "prepare", "server1", "server2", sub {
    if(is_bsd) {
      say "This is a BSD system...";
    }
    else {
      say "This is not a BSD system...";
    }
 };</code></pre>

<li><strong>is_solaris</strong></li>


<p>如果系统是Solaris，返回真。</p>
<pre><code class="perl">
 task "prepare", "server1", "server2", sub {
    if(is_solaris) {
      say "This is a Solaris system...";
    }
    else {
      say "This is not a Solaris system...";
    }
 };</code></pre>

<li><strong>is_windows</strong></li>


<p>如果系统是Windows，返回真。</p>

<li><strong>is_openwrt</strong></li>


<p>如果系统是OpenWrt，返回真。</p>

<li><strong>is_gentoo</strong></li>


<p>Returns true if the target system is a Gentoo System.</p>

</ul>




