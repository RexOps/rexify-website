% layout 'default';
% title '';

% content_for header => begin
      <meta name="description" content="This is a Module to manage Virtual Machines or Cloud Instances in a simple way. Currently it supports only VirtualBox.">
      <meta name="keywords" content="Rex, API, Documentation">
% end 


<!-- INDEX BEGIN -->
<div name="index">
<h1>目录</h1>

<ul>

	<li><a href="#description">摘要</a></li>
	<li><a href="#synopsis">例子</a></li>
	<li><a href="#exported_functions">导出函数</a></li>
</ul>


</div>
<!-- INDEX END -->

<p>
</p>
<h2>摘要</h2>
<p>这是一个管理虚拟机或者云主机的简易模块。当前只支持 VirtualBox。</p>
<p>
</p>

<h2>例子</h2>
<pre><code class="perl">
 use Rex::Commands::Box;
   
 set box =&gt; "VBox";
  
 group all_my_boxes =&gt; map { get_box($_-&gt;{name})-&gt;{ip} } list_boxes;
  
 task mytask =&gt; sub {
   
   box {
     my ($box) = @_;
     $box-&gt;name("boxname");
     $box-&gt;url("http://box.rexify.org/box/base-image.box");
       
     $box-&gt;network(1 =&gt; {
      type =&gt; "nat",
     });
        
     $box-&gt;network(1 =&gt; {
      type =&gt; "bridged",
      bridge =&gt; "eth0",
     });
       
     $box-&gt;forward_port(ssh =&gt; [2222, 22]);
       
     $box-&gt;share_folder(myhome =&gt; "/home/myuser");
       
     $box-&gt;auth(
      user =&gt; "root",
      password =&gt; "box",
     );
      
     $box-&gt;setup(qw/task_to_customize_box/);
     
   };
   
 };</code></pre>
<p>
</p>

<h2>导出函数</h2>
<ul>
<li><strong>new(name =&gt; $box_name)</strong></li>


<p>OO 模式下的构造器。</p>
<pre><code class="perl">
 my $box = Rex::Commands::Box-&gt;new(name =&gt; "box_name");</code></pre>

<li><strong>box(sub {})</strong></li>


<p>用这个函数创建新的 Rex/Box。第一个参数是一个 Box 对象。通过这个对象定义你的 box。</p>
<pre><code class="perl">
 box {
   my ($box) = @_;
   $box-&gt;name("boxname");
   $box-&gt;url("http://box.rexify.org/box/base-image.box");
     
   $box-&gt;network(1 =&gt; {
    type =&gt; "nat",
   });
      
   $box-&gt;network(1 =&gt; {
    type =&gt; "bridged",
    bridge =&gt; "eth0",
   });
     
   $box-&gt;forward_port(ssh =&gt; [2222, 22]);
     
   $box-&gt;share_folder(myhome =&gt; "/home/myuser");
     
   $box-&gt;auth(
    user =&gt; "root",
    password =&gt; "box",
   );
    
   $box-&gt;setup(qw/task_to_customize_box/);
 };</code></pre>

<li><strong>list_boxes</strong></li>


<p>这个函数返回一个哈希数组，包括了 Rex/Box 能收集到的所有信息。这个函数本身不会启动任何 Rex/Box。</p>
<pre><code class="perl">
 use Data::Dumper;
 task "get_infos", sub {
   my @all_boxes = list_boxes;
   print Dumper(\@all_boxes);
 };</code></pre>

<li><strong>get_box($box_name)</strong></li>


<p>这个函数尝试收集一个 Rex/Box 的全部信息。同时这个函数还会启动这个 Rex/Box 来收集运行中的系统的所有信息。</p>
<pre><code class="perl">
 use Data::Dumper;
 task "get_box_info", sub {
   my $data = get_box($box_name);
   print Dumper($data);
 };</code></pre>

<li><strong>boxes($action, @data)</strong></li>


<p>这个函数控制 box 本身。目前有 3 个动作可用。</p>
<ul>
<li><strong>init</strong></li>


<p>这个动作只用于你用 YAML 文件描述自己的 Rex/Box 时。</p>
<pre><code class="perl">
 task "prepare_boxes", sub {
   boxes "init";
 };</code></pre>

<li><strong>start</strong></li>


<p>这个动作启动一个或多个 Rex/Box。</p>
<pre><code class="perl">
 task "start_boxes", sub {
   boxes "start", "box1", "box2";
 };</code></pre>

<li><strong>stop</strong></li>


<p>这个动作停止一个或多个 Rex/Box。</p>
<pre><code class="perl">
 task "stop_boxes", sub {
   boxes "stop", "box1", "box2";
 };</code></pre>

</ul>

</ul>




