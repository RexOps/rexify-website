% layout 'default';
% title '';

% content_for header => begin
      <meta name="description" content="This is a Module to manage Virtual Machines or Cloud Instances in a simple way. Currently it supports only VirtualBox.">
      <meta name="keywords" content="Rex, API, Documentation">
% end 


<!-- INDEX BEGIN -->
<div name="index">
<h1>目录</h1>

<ul>

	<li><a href="#description">摘要</a></li>
	<li><a href="#synopsis">例子</a></li>
	<li><a href="#exported_functions">导出函数</a></li>
</ul>


</div>
<!-- INDEX END -->

<p>
</p>
<h2>摘要</h2>
<p>This is a Module to manage Virtual Machines or Cloud Instances in a simple way. Currently it supports only VirtualBox。</p>
<p>
</p>

<h2>例子</h2>
<pre><code class="perl">
 use Rex::Commands::Box;
    
 set box =&gt; "VBox";
   
 group all_my_boxes =&gt; map { get_box($_-&gt;{name})-&gt;{ip} } list_boxes;
   
 task mytask =&gt; sub {
    
    box {
       my ($box) = @_;
       $box-&gt;name("boxname");
       $box-&gt;url("http://box.rexify.org/box/base-image.box");
          
       $box-&gt;network(1 =&gt; {
         type =&gt; "nat",
       });
           
       $box-&gt;network(1 =&gt; {
         type =&gt; "bridged",
         bridge =&gt; "eth0",
       });
          
       $box-&gt;forward_port(ssh =&gt; [2222, 22]);
          
       $box-&gt;share_folder(myhome =&gt; "/home/myuser");
          
       $box-&gt;auth(
         user =&gt; "root",
         password =&gt; "box",
       );
         
       $box-&gt;setup(qw/task_to_customize_box/);
       
    };
    
 };</code></pre>
<p>
</p>

<h2>导出函数</h2>
<ul>
<li><strong>new(name =&gt; $box_name)</strong></li>


<p>Constructor if used in OO mode。</p>
<pre><code class="perl">
 my $box = Rex::Commands::Box-&gt;new(name =&gt; "box_name");</code></pre>

<li><strong>box(sub {})</strong></li>


<p>With this function you can create a new Rex/Box. The first parameter of this function is the Box object. With this object you can define your box。</p>
<pre><code class="perl">
 box {
    my ($box) = @_;
    $box-&gt;name("boxname");
    $box-&gt;url("http://box.rexify.org/box/base-image.box");
       
    $box-&gt;network(1 =&gt; {
      type =&gt; "nat",
    });
        
    $box-&gt;network(1 =&gt; {
      type =&gt; "bridged",
      bridge =&gt; "eth0",
    });
       
    $box-&gt;forward_port(ssh =&gt; [2222, 22]);
       
    $box-&gt;share_folder(myhome =&gt; "/home/myuser");
       
    $box-&gt;auth(
      user =&gt; "root",
      password =&gt; "box",
    );
      
    $box-&gt;setup(qw/task_to_customize_box/);
 };</code></pre>

<li><strong>list_boxes</strong></li>


<p>This function returns an array of hashes containing all information that can be gathered from the hypervisor about the Rex/Box. This function doesn't start a Rex/Box。</p>
<pre><code class="perl">
 use Data::Dumper;
 task "get_infos", sub {
    my @all_boxes = list_boxes;
    print Dumper(\@all_boxes);
 };</code></pre>

<li><strong>get_box($box_name)</strong></li>


<p>This function tries to gather all information of a Rex/Box. This function also starts a Rex/Box to gather all information of the running system。</p>
<pre><code class="perl">
 use Data::Dumper;
 task "get_box_info", sub {
    my $data = get_box($box_name);
    print Dumper($data);
 };</code></pre>

<li><strong>boxes($action, @data)</strong></li>


<p>With this function you can control your boxes. Currently there are 3 actions。</p>
<ul>
<li><strong>init</strong></li>


<p>This action can only  be used if you're using a YAML file to describe your Rex/Boxes。</p>
<pre><code class="perl">
 task "prepare_boxes", sub {
    boxes "init";
 };</code></pre>

<li><strong>start</strong></li>


<p>This action start one or more Rex/Boxes。</p>
<pre><code class="perl">
 task "start_boxes", sub {
    boxes "start", "box1", "box2";
 };</code></pre>

<li><strong>stop</strong></li>


<p>This action stop one or more Rex/Boxes。</p>
<pre><code class="perl">
 task "stop_boxes", sub {
    boxes "stop", "box1", "box2";
 };</code></pre>

</ul>

</ul>




