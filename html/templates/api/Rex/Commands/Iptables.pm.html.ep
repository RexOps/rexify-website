% layout 'default';
% title '';

% content_for header => begin
      <meta name="description" content="With this Module you can manage basic Iptables rules.">
      <meta name="keywords" content="Rex, API, Documentation">
% end 


<!-- INDEX BEGIN -->
<div name="index">
<h1>目录</h1>

<ul>

	<li><a href="#description">摘要</a></li>
	<li><a href="#synopsis">例子</a></li>
	<li><a href="#exported_functions">导出函数</a></li>
</ul>


</div>
<!-- INDEX END -->

<p>
</p>
<h2>摘要</h2>
<p>With this Module you can manage basic Iptables rules。</p>
<p>
</p>

<h2>例子</h2>
<pre><code class="perl">
 use Rex::Commands::Iptables;
     
 task "firewall", sub {
    iptables_clear;
     
    open_port 22;
    open_port [22, 80] =&gt; {
       dev =&gt; "eth0",
    };
        
    close_port 22 =&gt; {
       dev =&gt; "eth0",
    };
    close_port "all";
        
    redirect_port 80 =&gt; 10080;
    redirect_port 80 =&gt; {
       dev =&gt; "eth0",
       to  =&gt; 10080,
    };
      
    default_state_rule;
    default_state_rule dev =&gt; "eth0";
        
    is_nat_gateway;
       
    iptables t =&gt; "nat",
             A =&gt; "POSTROUTING",
             o =&gt; "eth0",
             j =&gt; "MASQUERADE";
    
 };</code></pre>
<p>
</p>

<h2>导出函数</h2>
<ul>
<li><strong>open_port($port, $option)</strong></li>


<p>Open a port for inbound connections。</p>
<pre><code class="perl">
 task "firewall", sub {
    open_port 22;
    open_port [22, 80];
    open_port [22, 80] =&gt; { dev =&gt; "eth1", };
 };</code></pre>

<li><strong>close_port($port, $option)</strong></li>


<p>Close a port for inbound connections。</p>
<pre><code class="perl">
 task "firewall", sub {
    close_port 22;
    close_port [22, 80];
    close_port [22, 80] =&gt; { dev =&gt; "eth0", };
 };</code></pre>

<li><strong>redirect_port($in_port, $option)</strong></li>


<p>Redirect $in_port to an other local port。</p>
<pre><code class="perl">
 task "redirects", sub {
    redirect_port 80 =&gt; 10080;
    redirect_port 80 =&gt; {
       to  =&gt; 10080,
       dev =&gt; "eth0",
    };
 };</code></pre>

<li><strong>iptables(@params)</strong></li>


<p>Write standard iptable comands。</p>
<pre><code class="perl">
 task "firewall", sub {
    iptables t =&gt; "nat", A =&gt; "POSTROUTING", o =&gt; "eth0", j =&gt; "MASQUERADE";
    iptables t =&gt; "filter", i =&gt; "eth0", m =&gt; "state", state =&gt; "RELATED,ESTABLISHED", j =&gt; "ACCEPT";
        
    iptables "flush";
    iptables -F;
    iptables flush =&gt; "filter";
    iptables -F =&gt; "filter";
 };</code></pre>

<li><strong>is_nat_gateway</strong></li>


<p>This function create a nat gateway for the device the default route points to。</p>
<pre><code class="perl">
 task "make-gateway", sub {
    is_nat_gateway;
 };</code></pre>

<li><strong>default_state_rule(%option)</strong></li>


<p>Set the default state rules for the given device。</p>
<pre><code class="perl">
 task "firewall", sub {
    default_state_rule(dev =&gt; "eth0");
 };</code></pre>

<li><strong>iptables_list</strong></li>


<p>List all iptables rules。</p>
<pre><code class="perl">
 task "list-iptables", sub {
    print Dumper iptables_list;
 };</code></pre>

<li><strong>iptables_clear</strong></li>


<p>Remove all iptables rules。</p>
<pre><code class="perl">
 task "no-firewall", sub {
    iptables_clear;
 };</code></pre>

</ul>




