% layout 'default';
% title 'Rex::Transaction - Transaction support.';

% content_for header => begin
      <meta name="description" content="With this module you can define transactions and rollback szenarios on failure.">
      <meta name="keywords" content="Rex, API, Documentation">
% end 


<!-- INDEX BEGIN -->
<div name="index">
<h1>目录</h1>

<ul>

        <li><a href="#name">名称</a></li>
        <li><a href="#description">摘要</a></li>
        <li><a href="#synopsis">例子</a></li>
        <li><a href="#exported_functions">导出函数</a></li>
</ul>


</div>
<!-- INDEX END -->

<p>
</p>
<h2>名称</h2>
<p>Rex::Transaction - 事务支持。</p>
<p>
</p>

<h2>摘要</h2>
<p>此模块你可以定义事务，并在事务执行失败时执行脚本回滚。</p>
<p>
</p>

<h2>例子</h2>
<pre><code class="perl">
 task "do-something", "server01", sub {
  on_rollback {
    rmdir "/tmp/mydata";
  };
 
  transaction {
    mkdir "/tmp/mydata";
    upload "files/myapp.tar.gz", "/tmp/mydata";
    run "cd /tmp/mydata; tar xzf myapp.tar.gz";
    if($? != 0) { die("Error extracting myapp.tar.gz"); }
  };
 };</code></pre>
<p>
</p>

<h2>导出函数</h2>
<ul>
<li><strong>transaction($codeRef)</strong></li>


<p>开始进行事务代码 $codeRef。如果执行 $codeRef 出错则进行回滚操作。</p>
<pre><code class="perl">
 task "deploy", group =&gt; "frontend", sub {
    on_rollback {
      rmdir "...";
    };
    deploy "myapp.tar.gz";
 };
  
 task "restart_server", group =&gt; "frontend", sub {
    run "/etc/init.d/apache2 restart";
 };
  
 task "all", group =&gt; "frontend", sub {
    transaction {
      do_task [qw/deploy restart_server/];
    };
 };</code></pre>

<li><strong>on_rollback($codeRef)</strong></li>


+<p>如果事物失败，回滚需要执行代码 $codeRef。</p>
+<p>可参考 <em>transaction</em>。</p>

</ul>




