% layout 'default';
% title 'Release notes for 0.46';

% content_for header => begin
      <meta name="description" content="(R)?ex - manage all your boxes from a central point - Release notes">
      <meta name="keywords" content="Configuration, Management, Configuration Management, Linux, Deployment, Devops">
% end

         <h1>Release notes for 0.46</h1>
         <p>下面是 0.46 版的主要变更：</p>
        <p>感谢所有贡献代码和修复 bug 报告的人，是你们让 Rex 越来越好 :)</p>

<h2>不向后兼容的变更</h2>
<p>本次版本更新带来一些不再向后兼容的改变，对此表示歉意。变化应该不会影响到大多数用户，不过为了解决一些问题，以及未来的灵活性考虑，这些动作都是值得去做的。</p>
<ul>
  <li>报告: 改变了报告格式。输出和报告接口的内部 API 都有所变动。这样未来优化时可以更灵活了。</li>
  <li>User 模块: 我们修改了家目录的创建行为，以遵从目的主机的做法。</li>
  <li>核心: 默认开启缓存。如果你在一个任务中使用 chroot() 来切换操作系统的话，可能会出现问题。
    (比如从一个 debian 系统切换到 redhat 系统)</li>
</ul>

<h2>Rex::Test</h2>
<p>通过 Rex::Test ，我们可以在真正运行代码前先在本地测试自己的 Rexfile。
  Rex::Test 用 Rex::Box 创建虚拟机，不过目前它只支持 VirtualBox 虚拟机。</p>

<p>要创建测试，只需要在 <i>t</i> 目录里创建一个 <i>t/base.t</i> 文件。</p>

<pre><code class="perl">use Rex::Test::Base;
use Data::Dumper;
use Rex -base;

test {
  my $t = shift;

  $t-&gt;name("ubuntu test");

  $t-&gt;base_vm("http://box.rexify.org/box/ubuntu-server-12.10-amd64.ova");
  $t-&gt;vm_auth(user =&gt; "root", password =&gt; "box");

  $t-&gt;run_task("setup");

  $t-&gt;has_package("vim");
  $t-&gt;has_package("ntp");
  $t-&gt;has_package("unzip");
  $t-&gt;has_file("/etc/ntp.conf");
  $t-&gt;has_service_running("ntp");
  $t-&gt;has_content("/etc/passwd", qr{root:x:0:}ms);

  run "ls -l";
  $t-&gt;ok($? == 0, "ls -l returns success.");

  $t-&gt;finish;
};

1;</code></pre>

<h2>Rex::Box</h2>
<p>用来为你的项目创建一个干净的开发环境。可以模拟生产环境来做测试。</p>
<p>通过 Rex/Boxes 你可以很容易的利用 VirtualBox 创建测试环境。
  你可以利用已有的虚拟机镜像也可以自己做一个。快速创建自有环境请阅读 <a href="http://box.rexify.org/guide">快速入门</a> 文档。</p>
<ul>
  <li>
    <p>本版本开始支持 KVM 虚拟机。Rex::Box 的 KVM 供应层还允许你在远程系统管理上创建虚拟机。</p>
<pre><code class="perl"># Rexfile
set box =&gt; "KVM";

#
# CALL:
# rex init --name=gpw --url=http://domain.tld/ubuntu-server-12.10-amd64.qcow2
desc "Initialize and start the VM: rex init --name=vmname [--url=http://...]";
task "init", make {
  my $param = shift;

  box {
    my ($box) = @_;
    $box-&gt;name( $param-&gt;{name} );

    # where to download the base image
    $box-&gt;url( $param-&gt;{url} );

    # default is nat
    $box-&gt;network(
      1 =&gt; {
        type =&gt; "nat",
      },
      2 =&gt; {
        type   =&gt; "bridged",
        bridge =&gt; "br1",
      }
    );

    # define the authentication to the box
    # if you're downloading one from box.rexify.org this is the default.
    $box-&gt;auth(
      user     =&gt; "root",
      password =&gt; "box",
    );

    # if you want to provision the machine,
    # you can define the tasks to do that
    $box-&gt;setup(qw/install_webserver/);
  };

};</code></pre>
  </li>
</ul>


         <h2>云</h2>
         <p>云 API 方面的变更</p>
<ul class="simple-list">
   <li>
     <p>通过<a href="#">模块</a>支持 RackSpace。</p>
     <ul>
       <li>
         <p>认证和终端。</p>
<pre><code class="perl">cloud_service "RackSpace";
cloud_auth "user", "key";
cloud_region "IAD";
</code></pre>

       </li>
       <li><p>创建卷和虚拟机。</p>

<pre><code class="perl">my $vol_id = cloud_volume create =&gt; { size =&gt; 1, };

my $instance = cloud_instance create =&gt; {
  image_id =&gt; "80fbcb55-b206-41f9-9bc2-2dd7aac6c061",
  name     =&gt; "myvm01",
  flavor   =&gt; "performance1-1",
  networks =&gt; ["a733f9d7-098e-4bf1-881d-5a91e84b44bb"];  # networks is optional
};

cloud_volume attach =&gt; $vol_id,
    to =&gt $instance&gt;{id};
</code></pre>

       </li>
       <li><p>终止实例和删除卷。</p>
<pre><code class="perl">cloud_instance terminate =&gt; $instance&gt;{id};
cloud_volume delete =&gt; $vol_id;</code></pre>

     </li>
     </ul>

   </li>
   <li>修复amazon会在数组里返回实例元素的小问题 - Kasim Tuman</li>
   <li>修复多标签问题 - David Golovan</li>
 </ul>

<h2>报告</h2>
<ul>
  <li>
<p>重构报告生成器。因为报告格式变化，该变动破坏了向后兼容性。</p>
</li>
</ul>


<h2>核心</h2>
<ul>
  <li>
    <p>缓存现在默认开启。如果你在使用 chroot() 来切换操作系统的话，该变动也打破了向后兼容性。</p>
  </li>
  <li>
    <p>
      允许传递模板内容给 template 命令 - #345 - reneeb
    </p>
    <pre><code class="perl">file "/etc/file.cnf",
  content =&gt; template(\'&lt;%= $name %&gt; is cool!', name =&gt; 'Rex');</code></pre>
  </li>
  <li>
    <p>
      添加 'no_cache' 特性。如果你要关闭缓存的话，使用这个。
    </p>
    <pre><code class="perl"># Rexfile
use Rex -feature =&gt; ['no_cache'];</code></pre>
  </li>
  <li>
    <p>为 Perl 库添加一个特殊的加载路径( lib/perl )，这样不用把 Perl和 Rex 的模块混放在一起了。</p>
  </li>
  <li>
    <p>重构了家目录的创建处理逻辑。这个变动也会打破向后兼容性。现在我们默认是遵从系统设置。(添加了 create_home 参数) - #270 - FErki</p>
  </li>
  <li>
    <p>CMDB 的 path 参数可以设置变量 / 可扩展。</p>
    <pre><code class="perl"># Rexfile
use Rex::CMDB;
set cmdb =&gt; {
  type =&gt; "YAML",
  path =&gt; [
    "cmdb/{operatingsystem}/{hostname}.yml",
    "cmdb/{operatingsystem}/default.yml",
    "cmdb/{environment}/{hostname}.yml",
    "cmdb/{environment}/default.yml",
    "cmdb/{hostname}.yml",
    "cmdb/default.yml",
  ],
};</code></pre>
  </li>
  <li>
    <p>连接失败报告 "Error running task/batch: Wrong username/password or wrong key"  - #359 - eduardoj</p>
  </li>
  <li>
    <p>增强 rexify 命令配合 git 工作。</p>
  </li>
  <li>
    <p>给 environments 添加 desc 描述功能 - #274</p>
    <pre><code class="perl"># Rexfile
desc "The live environment";
environment live => sub {};</code></pre>
  </li>
  <li>
    <p>添加 <code>groups_dbi()</code> 函数从 sql 生成服务器组 - #346 - Jean-Marie RENOUARD</p>
  </li>
  <li>
    <p>添加 <code>groups_yaml()</code> 函数从 yaml 生成服务器组 - Jean-Marie RENOUARD</p>
  </li>
  <li>
    <p>给指定的挂载点添加 df 支持 - Simon Bertrang</p>
  </li>
  <li>
    <p>给 download() 函数添加认证功能。 - #340</p>
    <pre><code class="perl">download "http://secured.location.tld/foo.tgz", "foo.tgz",
  user =&gt; "httpuser",
  password =&gt; "password";</code></pre>
  </li>
  <li>
    <p>重构临时目录生成功能 - FErki</p>
  </li>
</ul>



<!-- end -->
