% layout 'default';
% title 'Release notes for 0.40';

% content_for header => begin
      <meta name="description" content="(R)?ex - manage all your boxes from a central point - Release notes">
      <meta name="keywords" content="Rex, API, Documentation">
% end
<h1><%= title %></h1>
<h1>Common</h1>
<h2>Added basic CMDB interface.</h2>
<p>The first CMDB module is based on YAML files. With this change there will be also a default environment under which rex runs. The default environment is named * drum roll * "default".</p>
<div class="btn btn-default copy-button pull-right" data-clipboard-target="clipboard0">Copy to clipboard</div>
<pre><code class="perl" id="clipboard0">use Cwd 'getcwd';
use Rex::CMDB;

set cmdb =&gt; {
   type =&gt; "YAML",
   path =&gt; getcwd() . "/cmdb",
};

task "prepare", sub {
   my $vhosts = get cmdb "vhosts";
};
</code></pre>

<p>This will search the given cmdb path for the following files (in the named order):</p>
<ol>
<li>cmdb/$environment/$server.yml</li>
<li>cmdb/$environment/default.yml</li>
<li>cmdb/$server.yml</li>
<li>cmdb/default.yml</li>
</ol>
<p>If it find the value for "vhosts" in one of these files, it will return that value and exit the search.</p>
<h2>VirtualBox</h2>
<p>It is now possible to use VirtualBox in headless mode on MacOSX and Linux.</p>
<div class="btn btn-default copy-button pull-right" data-clipboard-target="clipboard1">Copy to clipboard</div>
<pre><code class="perl" id="clipboard1">set  virtualization =&gt; { 
   type =&gt; "VBox",
   headless =&gt; TRUE
};

task "foo", sub {
    vm start =&gt; "myvm";
};
</code></pre>

<p>If you're using Rex/Boxes you can set this option in your YAML file.</p>
<div class="btn btn-default copy-button pull-right" data-clipboard-target="clipboard2">Copy to clipboard</div>
<pre><code>type: VBox
vbox:
   headless: true
vms:
   www01:
      url: http://box.rexify.org/box/ubuntu-server-12.10-amd64.ova
      network:
         1:
            type: bridged
            bridge: eth0
      setup: setup_frontend
</code></pre>

<h2>INI style group files</h2>
<p>From Franky Van Liedekerke.</p>
<div class="btn btn-default copy-button pull-right" data-clipboard-target="clipboard2">Copy to clipboard</div>
<pre><code>; my group file
[frontends]
fe01
fe02

fe03
fe04
fe05

# the backends
[backends]
be01
be02
;be03
be04

[db]
db[01..02]
</code></pre>

<div class="btn btn-default copy-button pull-right" data-clipboard-target="clipboard3">Copy to clipboard</div>
<pre><code class="perl" id="clipboard3">use Rex::Group::Lookup::INI;

groups_file "file.ini";
</code></pre>

<h2>Source global /etc/profile</h2>
<p>There is a new setting called source_global_profile. This will source /etc/profile before every run() command.</p>
<p>On some systems this is needed because the user's profile (.bashrc, .bash_profile) doesn't source the global file. Before you use this function consider changing your .bashrc.</p>
<div class="btn btn-default copy-button pull-right" data-clipboard-target="clipboard4">Copy to clipboard</div>
<pre><code class="perl" id="clipboard4">source_global_profile TRUE;
</code></pre>

<h2>Bugs</h2>
<ul>
<li>refactored sudo module for #98 - Dominik Schulz</li>
<li>refactored path calculation for upload(), file() and template() functions (#103 and #101)</li>
<li>export update_system sub - Ferenc Erki</li>
<li>fixed regex which gets name of interfaces - Fran Rodriguez</li>
<li>fixed dmidecode on OpenBSD</li>
</ul>
