% layout 'default';
% title 'Release notes for 0.53.1';

% content_for header => begin
      <meta name="description" content="(R)?ex - manage all your boxes from a central point - Release notes">
      <meta name="keywords" content="Configuration, Management, Configuration Management, Linux, Deployment, Devops">
% end

         <h1>Release notes for 0.53.1</h1>
         <p>These are the changes in 0.53 release.</p>

         <p>该版本带来一些 bugfix 和跟当前 <a href="https://github.com/RexOps/rex-jobcontrol">Rex::JobControl</a> 前端界面的兼容性修改。</p>
         <p>Rex::JobControl 前端界面的第一个版本会在随后几天内发布。不过这会单独开一个公告。</p>


<h2>Base</h2>
<ul>
  <li>
  <p>添加新的 <b>resource</b> (资源)函数。</p>
  <p><i>resource</i> 是一个 perl 函数，代表在你服务器上的一个 <i>object</i>(对象)。<i>object</i> 可以是一个 apache 的虚拟主机配置，可以是一个数据库用户，甚至更复杂一点，一个 Tomcat 实例。通过 resource() 函数，我们可以创建自定义资源，这个资源也同样可以出现在报表里。</p>
  <p>资源有特殊的语法和关键字。</p>
  <pre><code class="perl">resource $resource_name,
  option1 =&gt; "value1",
  option2 =&gt; "value2",
  ensure =&gt; "present, absent, ...";</pre></code>
  <p>目前，只有一个关键字是所有的资源都必须有的：</p>
  <ul>
    <li><b>ensure</b> - 可以是 <i>present</i> (如果不明确指定，这个就是默认值)或者 <i>absent</i> 或者其他什么字符串。</li>
  </ul>
  <p>每个资源也都要能在资源发生变更的时候发出变更信号。这个信号会触发 <i>on_change</i> 钩子函数，而且报表系统也会知道这个资源变化了。</p>
  <p>resource() 参数可以直接在模板中使用，不需要额外注册。</p>
  <p>资源会在创建它的名字空间下注册成普通的 perl 函数。你可以看<a href="#">这里</a>一个完整的示例。</p>

  <pre><code class="perl">package BaseSystem;
use Rex::Resource::Common;
resource "motd", sub {
  my ($params) = @_;
  my $name     = resource_name;

  if($params-&gt;{ensure} eq "present") {
    # do some things.
    if(! is_file($name) ) {
      file $name, content =&gt; $params-&gt;{content};
      emit changed;
    }
  }
  elsif($params-&gt;{ensure} eq "absent") {
    if( is_file($name) ) {
      rm $name;
      emit changed;
    }
  }
};</code></pre>

  <p>然后你就能在 <code>BaseSystem::motd</code> 里调用这个新资源了：</p>
  <pre><code class="perl">use BaseSystem;
task "setup", sub {
  BaseSystem::motd "/etc/motd",
    ensure  =&gt; present,
    content =&gt; "Hello World.",
    on_change     =&gt; sub {
      # do something when changed event was triggerd
    };
};
</code></pre>
  </li>
  <li><p>添加新的 feature 标识：<b>register_cmdb_top_scope</b>。用来注册你 CMDB 中所有的顶级域变量到模板里。</p></li>
</ul>


<h2>Bugfixes</h2>
<ul>
  <li>解决在 CentOS7 上利用 vbox 工具收集 IP 地址的问题。</li>
  <li>修复 file() 资源在删除文件时 on_change 钩子的问题。</li>
  <li>#419 - 修复 Mageia, Redhat 和 SuSE 的 chkconfig 问题 - chenryn。</li>
</ul>
