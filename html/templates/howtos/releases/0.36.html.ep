% layout 'default';
% title 'Release notes for 0.36';

% content_for header => begin
      <meta name="description" content="(R)?ex - manage all your boxes from a central point - Release notes">
      <meta name="keywords" content="Rex, API, Documentation">
% end
<h1><%= title %></h1>
<h1>General</h1>
<ul>
<li>OpenNebula Support via a module.</li>
</ul>
<p>You can download OpenNebula module with the following command:</p>
<div class="btn btn-default copy-button pull-right" data-clipboard-target="clipboard0">Copy to clipboard</div>
<pre><code>bash# rexify --use Rex::Cloud::OpenNebula
</code></pre>

<div class="btn btn-default copy-button pull-right" data-clipboard-target="clipboard0">Copy to clipboard</div>
<pre><code class="perl" id="clipboard1">use strict;
use warnings;

use Rex::Commands::Cloud;
use Rex::Cloud::OpenNebula;
use Data::Dumper;

user "root";

cloud_service "OpenNebula";
cloud_auth "oneadmin", "opennebula";
cloud_region "http://172.16.120.131:2633/RPC2";

task "list-os", sub {
   print Dumper get_cloud_operating_systems;
};

task "create", sub {
   my $params = shift;
   my $vm = cloud_instance create =&gt; {
      image        =&gt; "template-1",
      name         =&gt; $params-&gt;{name},
   };

   print Dumper($vm);
};

task "start", sub {
   my $params = shift;
   cloud_instance start =&gt; $params-&gt;{name};
};

task "stop", sub {
   my $params = shift;
   cloud_instance stop =&gt; $params-&gt;{name};
};

task "terminate", sub {
   my $params = shift;
   cloud_instance terminate =&gt; $params-&gt;{name};
};

task "list", sub {
   print Dumper cloud_instance_list;
};
</code></pre>

<ul>
<li>New function: run_task</li>
</ul>
<p>With this function you can run a specific task on a given host and get the output as a return value.</p>
<div class="btn btn-default copy-button pull-right" data-clipboard-target="clipboard1">Copy to clipboard</div>
<pre><code class="perl" id="clipboard2">task "prepare", "server5", sub {
   # do something
   my $free_mem = run_task "get_free_mem", on =&gt; "server3";
   if($free_mem &lt; 100) {
      say "Less than 100 MB free mem on server3";
      # create a new server instance on server5 to unload server3
   }
};

task "get_free_mem", sub {
    return memory-&gt;{free};
};

</code></pre>

<ul>
<li>
<p>get private IP of Amazon EC2 instances (jdelgado7)</p>
</li>
<li>
<p>added function to extend cloud API with external modules</p>
</li>
<li>
<p>fixed #80: requiretty isn't a problem anymore</p>
</li>
</ul>
