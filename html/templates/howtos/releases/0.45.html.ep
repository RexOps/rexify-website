% layout 'default';
% title 'Release notes for 0.45';

% content_for header => begin
      <meta name="description" content="(R)?ex - manage all your boxes from a central point - Release notes">
      <meta name="keywords" content="Configuration, Management, Configuration Management, Linux, Deployment, Devops">
% end

         <h1>Release notes for 0.45</h1>
         <p>These are the changes in 0.45 release.</p>
        <p>We want to thank all the people for contributing code and to fill bug reports. This helps making Rex better and better :)</p>

         <h2>Cloud</h2>
         <p>Changes in the Cloud API</p>

         <ul class="simple-list">
            <li>
              <p>OpenStack Support - Ferenc Erki</p>
              <ul>
                <li>
                  <p>Authentication and endpoint.</p>
<pre><code class="perl">cloud_service "OpenStack";
cloud_auth tenant_name =&gt; "tenant",
           username    =&gt; "user",
           password    =&gt; "password";
cloud_region "http://openstack.domain.tld:5000/v2.0";</code></pre>

                </li>
                <li><p>Creating volumes and vms.</p>

<pre><code class="perl">my $vol_id = cloud_volume create =&gt; { size =&gt; 1, zone =&gt; "nova", };

my $instance = cloud_instance create =&gt; {
  image_id =&gt; "ccd8bcab-8ad2-4744-8227-08279fab7a42",
  name     =&gt; "ostack01",
  plan_id  =&gt; 2,
  volume   =&gt; $vol_id,
};</code></pre>

                </li>
                <li><p>Terminating an instance and removing the volume.</p>
<pre><code class="perl">cloud_instance terminate =&gt; $instance->{id};
cloud_volume delete =&gt; $vol_id;</code></pre>


              </li>
              </ul>
            </li>
            <li>added cloud_image_list() function</li>
            <li>added cloud_network() function to manage cloud networks if the provider supports it</li>
         </ul>

          <h2>Common</h2>
          <p>Changes in the core. These include new resources and new options for existing one.</p>

          <ul>
            <li><p>new options for the file() resource</p>
              <ul>
                <li><p>no_overwrite option for file() resource.</p><p>If this option is set, the file will never be overwritten.</p>
<pre><code class="perl">file "/var/named/$zone->{name}.zone",
  content      =&gt; template( '@zone-file.tpl', conf =&gt; $conf, %{$zone} ),
  owner        =&gt; "named",
  group        =&gt; "named",
  no_overwrite =&gt; TRUE;</code></pre>
                </li>
                <li><p>ensure directory option for file().</p><p>If the ensure option is set to directory the file() resource will create a directory instead of a file</p>
<pre><code class="perl">file "/var/named",
  ensure =&gt; "directory",
  owner  =&gt; "named",
  group  =&gt; "named";</code></pre>
                </li>
                <li><p>allow array for file() resource.</p><p>This allow operations on multiple files without duplicating the code.</p>
<pre><code class="perl">file [
    "/etc/rex/io/inventory/bootdevice", "/etc/rex/io/inventory/bridge",
    "/etc/rex/io/inventory/sysinfo", "/etc/rex/io/inventory/os"
  ],
  owner =&gt; "root",
  group =&gt; "root",
  mode  =&gt; 755;</code></pre>
                </li>
              </ul>
              <li><p>New options for run() resource.</p>
                <ul>
                  <li><p>run() resource can now have a name.</p><p>This is needed for notifications, if a command should only be executed if notified.</p>
<pre><code class="perl">run "kill-process-httpd",
  command       =&gt; "killall -KILL httpd",
  only_notified =&gt; TRUE;

# somewhere else in the code
notify run =&gt; "kill-process-httpd";</code></pre>
                  </li>
                  <li><p><i>creates</i> option for run() resource.</p><p>This tell Rex that this command creates a special file. If this file is found, the command won't get executed anymore.</p>
<pre><code class="perl">run "download-ipxe",
  command =&gt; "wget -O /var/lib/tftpboot/undionly.ipxe http://boot.ipxe.org/undionly.kpxe",
  creates =&gt; "/var/lib/tftpboot/undionly.ipxe";</code></pre>
                  </li>
                  <li><p><i>only_if</i> and <i>unless</i> option for run() resource.</p><p>This will execute the command only if the command given will execute successfully (or terminate unsuccessfull).</p>
<pre><code class="perl">run "add-service-os",
    command =&gt; "mysql -uroot &lt; /tmp/data.sql",
    unless  =&gt; "mysql -uroot dbschema -e 'SELECT id FROM os_template WHERE id=2' | grep -q 2";</code></pre>
                  </li>
                  <li><p>support for customized environments. - #316 - andrejzverev</p><p>It is now possible to add custom environment variables to the run() resource.</p>
<pre><code class="perl">run "my_command",
  env =&gt; {
    env_var_1 =&gt; "the value for 1",
    env_var_2 =&gt; "the value for 2",
  };</code></pre>
                  </li>
                </ul>
              </li>
              <li><p>Added notifications for <i>run</i> and <i>service</i>.</p>
                <ul>
                  <li><p>services will notified at the end of the task.</p>
<pre><code class="perl">service "httpd", ensure =&gt; "running";

# somewhere else in the code
file "/etc/httpd/httpd.conf",
  content   =&gt; template("templates/httpd.conf.tpl", %vars),
  on_change =&gt; sub { notify service =&gt; "httpd"; };</code></pre>
                  </li>
                </ul>
              </li>
              <li><p><i>pkg</i> resource (replacement for install function).</p>
<pre><code class="perl">pkg "vim", ensure =&gt; "present";
pkg "httpd", ensure =&gt; "2.4.6";
pkg "vim-tiny", ensure =&gt; "absent";
pkg ["tftp-server", "wget"], ensure =&gt; "latest";</code></pre>
            </li>
            <li><p>Added account() resource (as replacement for create_user).</p>
<pre><code class="perl">account "krimdomu",
  ensure   =&gt; "present",
  uid      =&gt; 509,
  home     =&gt; '/root',
  comment  =&gt; 'User Account',
  expire   =&gt; '2011-05-30',
  groups   =&gt; ['root', '...'],
  password =&gt; 'blahblah',
  system   =&gt; 1,
  no_create_home =&gt; TRUE,
  ssh_key        =&gt; "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQChUw...";</code></pre>
            </li>
<li><p>Support -g to supply group name - #330 - fanyeren</p></li>
<li><p><i>can_run()</i> now returns the first command found as string - #193</p></li>
<li><p>read cpu information out of /proc/cpuinfo if dmidecode is not available - #306</p></li>

          </ul>

          <h2>Bugfixes</h2>
          <p>Known bugs that has been fixed.</p>

          <ul>
<li><p>Check if iptables rule already exists.</p></li>
<li><p>Fixed SCM::Git to work with sudo.</p></li>
<li><p>Update _parse_ip subroutine. be possible to parse ppp0. #328 - Tomohiro Hosaka.</p></li>
<li><p>Handles the case where rsync is missing, and that makes Rex wait forever - #331 - Joris DE POOTER.</p></li>
<li><p>Fixed $Rex::Logger::format does not apply. - #335.</p></li>
<li><p>Fixed download() command on windows.</p></li>
<li><p>Fixed debian system_update - #339 - Niklas Larsson.</p></li>
          </ul>
