% layout 'default';
% title '用 Rex 部署 Tomcat';

% content_for header => begin
      <meta name="description" content="Tomcat deployment with Rex">
      <meta name="keywords" content="Rex, Deploy, Tomcat, Server, Linux, Remote, Automation">
% end

         <h1>用 Rex 部署 Tomcat</h1>
         <p>这是一个小示例，演示如何部署服务、配置文件和应用到你的服务器上。本例将安装 <a href="http://tomcat.apache.org/">tomcat</a>, 修改 <i>tomcat-users.xml</i> 文件然后上传 <a href="http://code.google.com/p/psi-probe/">psi-probe</a>。</p>

         

         <h2>准备工作</h2>
         <ul>
            <li>下载并安装 rex (见 <a href="/get">get</a> 页)</li>
            <li>下载并安装 rex-apache-deploy &gt;= 0.4 (<a href="https://github.com/krimdomu/rex-apache-deploy">github</a> Branch: master)
               <p>rex-apache-deploy 是一个 Rex-Module 用来简化 PHP, Perl, Ruby 和 Tomcat 应用的部署工作。</p>
            </li>
            <li>安装一个干净的 <a href="http://www.debian.org/">Debian Squeeze</a> 虚拟机镜像。
               <ul>
                  <li>创建一对 SSH 密钥并上传公钥到服务器的 root 用户下 (/root/.ssh/authorized_keys)。</li>
                  <li>安装 openssh 服务器。</li>
                  <li>给你的 sources.list 添加 contrib 和 non-free 仓库。</li>
               </ul>
            </li>
         </ul>

         

         <h2>创建 (R)?ex 项目</h2>
         <p>首先我们创建一个新的 (R)?ex 项目。</p>
            <pre><code class="bash">$ rexify mysite</code></pre>

         
         <p>这个命令将创建一个叫 <i>mysite</i> 的目录。切换进这个目录。</p>

            <pre><code class="bash">$ cd mysite
$ ls -l
-rw-r--r--  1 jan  staff  359 16 Apr 14:08 Rexfile
drwxr-xr-x  3 jan  staff  102 16 Apr 10:02 lib</code></pre>

         <p>你会看到一个文件和一个目录。在这个 <i>Rexfile</i> 文件里你可以配置你的服务器和认证方式，你也可以在这里加载模块，我们稍后会提到这个。</p>

         

         <p>打开 <i>Rexfile</i> 文件修改成你需要的配置。</p>

            <pre><code class="perl">use Rex -feature =&gt; ['1.0'];

# set your username
user "root";

# private key
private_key "/Users/jan/.ssh/id_rsa";

# public key
public_key "/Users/jan/.ssh/id_rsa.pub";

# put your server in this group
# if you want to deploy multiple servers name them here
# group "servers" =&gt; "tomcat01", "tomcat02", "tomcat03", "tomcat04";
#
# or use the expression feature
# group "servers" =&gt; "tomcat[01..04]";

# if you just want to deploy one server
group "servers" =&gt; "tomcat01";

# now load every module via ,,require''
require Rex::mysite;</code></pre>

         <p><i>Rexfile</i> 就是普通的一段 Perl 代码。</p>
         <p>你修改好 <i>Rexfile</i> 后就可以测试它。</p>

            <pre><code class="bash">$ rex -T
Rexfile syntax OK
Tasks
  mysite:uptime                  Get uptime of server
Batches</code></pre>

         

         <p><i>rexify</i> 创建了一个简单的测试任务 (mysite:uptime)。如果你运行这个命令，你可以看到你定义在 <i>servers</i> 组中服务器的 uptime 数据。</p>


            <pre><code class="bash">$ rex mysite:uptime
Rexfile syntax OK
[2011-04-16 16:08:03] - INFO - Running task: mysite:uptime
[2011-04-16 16:08:03] - INFO - Connecting to tomcat01 (root)
 16:08:03 up  7:42,  1 user,  load average: 0.00, 0.00, 0.00 </code></pre>

         

         <h2>创建任务</h2>
         

         <p>所以，如果我们想管理自己服务器的整个部署的话，也可以创建一些自己的任务。</p>
         <p>在这个例子里，我会把这些任务分割成和操作系统相关的任务，Tomcat 相关的任务、部署相关的任务。</p>
         
         <h3>操作系统</h3>
         
         <p>让我们先创建操作系统相关的任务：</p>

         
         <p>创建 <i>lib/Rex/OS.pm</i> 文件</p>

            <pre><code class="perl">package Rex::OS;
use Rex -feature =&gt; ['1.0'];

desc "Install base packages";
task "prepare", sub {
   pkg [ 
         "ntp",
         "hal",
         "dbus",
         "sudo",
         "vim",
       ],
     ensure =&gt; 'present';
};

desc "Start base services";
task "start-services", sub {
   prepare();

   service "hal",
     ensure =&gt; "started";
   service "dbus",
     ensure =&gt; "started";
   service "rsyslog",
     ensure =&gt; "started";
};

desc "Tune some /proc parameters";
task "tune", sub {
   sysctl "net.ipv4.tcp_keepalive_time" =&gt; 1800;  
   sysctl "net.ipv4.tcp_fin_timeout"    =&gt;   15;
   sysctl "net.ipv4.tcp_window_scaling" =&gt;    1;
};

1; </code></pre>
         

         <p>嗯，看起来蛮多的样子，其实还是很好懂的。</p>
         <p>我们创建了 3 个任务 <i>prepare</i>, <i>start-services</i> 和 <i>tune</i>。</p>

         

         <ul>
            <li>
               <i>prepare</i>
               <p>这个任务将会安装 ntp, hal, dbus, sudo 和 vim (如果这些软件没有安装的话)</p>
            </li>
            <li>
               <i>start-services</i>
               <p>这个任务会启动 hal, dbus 和 rsyslog (如果它们没有运行的话)。而且它还依赖于 <i>Rex::OS</i> 模块中的 <i>prepare</i> 任务。所以它会先运行 <i>prepare</i> 任务然后再运行自己的命令。</p>
            </li>
            <li>
               <i>tune</i>
               <p>这个任务会设置一些 sysctl 参数(如果它们没有被设置的话)</p>
            </li>
         </ul>

         

         
         <h3>Tomcat</h3>
         
         <p>创建好操作系统相关任务后我们会创建 tomcat 任务。这里我们要安装、配置 tomcat 服务器。</p>

         
         <p>创建 <i>lib/Rex/Tomcat.pm</i> 文件</p>

            <pre><code class="perl">package Rex::Tomcat;
use strict;
use warnings;

use Rex -feature =&gt; ['1.0'];

# include our Rex::OS Module, so that we can build dependencies to that module
use Rex::OS;

desc "Install tomcat packages";
task "prepare", sub {
   needs Rex::OS;

   pkg [ 
          "tomcat6-common",
          "tomcat6",
          "tomcat6-admin",
    ],
    ensure =&gt; "present";
};

desc "Configure Tomcat Manager User";
task "tomcat-user", sub {
   Rex::Tomcat::prepare();

   file "/etc/tomcat6/tomcat-users.xml",
      source    =&gt; "files/tomcat-users.xml",
      owner     =&gt; "root",
      group     =&gt; "tomcat6",
      mode      =&gt; 640,
      on_change =&gt; sub { service tomcat6 =&gt; "restart"; },
   };
};


1; </code></pre>

         
         <p>这里有 2 个任务：</p>
         <ul>
            <li>
               <i>prepare</i>
               <p>这个任务安装 tomcat 服务器This task installs the tomcat server</p>
               <p>同时它依赖于 <i>Rex::OS</i> 模块里定义的 <b>全部</b> 任务。</p>
            </li>
            <li>
               <i>tomcat-user</i>
               <p>这个任务会复制一个修改过的 tomcat-users.xml 文件到服务器，如果这个文件内容发生过变更，那么就重启 tomcat 服务器。</p>
               <p>它还会检查远端的文件属性是否正确，有必要的话会修改。</p>
            </li>
         </ul>

         
         <p>现在你需要创建这个 <i>files/tomcat-users.xml</i> 文件了：</p>
            <pre><code class="bash">$ mkdir files
$ cat &gt;files/tomcat-users.xml&lt;&lt;EOF
&lt;?xml version='1.0' encoding='utf-8'?&gt;
&lt;tomcat-users&gt;

  &lt;role rolename="manager"/&gt;
  &lt;user username="manager" password="manager" roles="manager"/&gt;
  
&lt;/tomcat-users&gt;
EOF </code></pre>

         
         <h3>Tomcat 软件部署</h3>
         
         <p>现在我们可以安装一些默认服务，调整一些 sysctl 参数(Rex::OS)，安装 tomcat 应用服务器(Rex::Tomcat)。下一步就是部署我们的 tomcat 应用(psi-probe)。</p>

         
         <p>所以，让我们创建 <i>lib/Rex/Deploy/Live/Tomcat.pm</i> 文件。</p>

            <pre><code class="perl">package Rex::Deploy::Live::Tomcat;

use strict;
use warnings;

use Rex -feature =&gt; ['1.0'];

# include the deployer modules
use Rex::Apache::Inject "Properties";
use Rex::Apache::Deploy "Tomcat";

# set configuration file
template_file "live-inject.conf";

# set files to change inside our tomcat application (probe.war)
template_search_for "stats.properties";

# inject our configuration from live-inject.conf to the file WEB-INF/stats.properties
desc "Inject Live Configuration";
task "inject", sub {
   inject "files/probe.war";
};


# set the context path of our application
context_path "/probe";

# deploy probe.war to our tomcat server
desc "Deploy probe.war to Live";
task "deploy", sub {
   # run the inject task before the deployment
   do_task 'Deploy:Live:Tomcat:inject';

   # the deployment requires a running tomcat
   needs Rex::Tomcat;

   # deploy probe.war
   deploy "files/probe.war",
      username =&gt; "manager",    # username of the tomcat manager
      password =&gt; "manager",    # password of the tomcat manager
      port     =&gt; 8080;         # port, tomcat is listening on
};

1; </code></pre>

         
         <p>现在我们需要创建 <i>live-inject.conf</i> 文件：</p>
            <pre><code class="bash"># every 10 seconds
com.googlecode.psiprobe.beans.stats.collectors.connector.period=10s
com.googlecode.psiprobe.beans.stats.collectors.cluster.period=10s
com.googlecode.psiprobe.beans.stats.collectors.memory.period=10s
com.googlecode.psiprobe.beans.stats.collectors.runtime.period=10s </code></pre>


         
         <h4>注入？这用来干什么好？</h4>
         <p>在这个例子里，我们只是把收集周期从默认的 30 秒修改成了 10 秒。</p>
         <p>但如果你有一个访问数据库的应用，你就可以注入不同的数据库参数到同一个 war 文件。你可以给 test、staging 和 live 环境部署完全相同的 war 文件了。</p>


         
         <h3>最后一步</h3>
         
         <p>现在我们已经定义好了所有的任务，但是还没有定义这些任务应该运行在哪些服务器上。</p>

         
         <p>打开 <i>lib/Rex/mysite.pm</i> 文件：</p>

            <pre><code class="perl">package Rex::mysite;
use strict;
use warnings;

use Rex -feature =&gt; ['1.0'];

desc "Get uptime of server";
task "uptime", group =&gt; "servers", sub {
   say run "uptime";
};

# One task to prepare the server
desc "Prepare Tomcat Server";
task "tomcat", group =&gt; "servers", sub {
   needs Rex::Tomcat;
};

# one task to deploy our application (probe.war)
desc "Deploy Live Tomcats";
task "deploy", group =&gt; "servers", sub {
   Rex::Deploy::Live::Tomcat::deploy();
};

1; </code></pre>

          <p>这里我们定义两个任务，一个准备系统另一个部署软件(probe.war)。</p>

          <ul>
            <li>
               <i>tomcat</i>
               <p>这个任务会在 <i>servers</i> 组里的所有服务器上运行。</p>
               <p>它会运行在 <i>Rex::Tomcat</i> 模块里定义的任务。</p>
            </li>
            <li>
               <i>deploy</i>
               <p>这个任务会在 <i>servers</i> 组里的所有服务器上运行。</p>
               <p>它只会运行在 <i>Rex::Deploy::Live::Tomcat</i> 模块里定义的 <i>deploy</i> 任务及其依赖。</p>
          </ul>

          

          <p>打开 <i>Rexfile</i> 然后在底部加载写好的所有模块。</p>


            <pre><code class="perl">require Rex::OS;
require Rex::Tomcat;
require Rex::Deploy::Live::Tomcat; </code></pre>

          

          <p>最后，我们需要解压 psi-probe.zip 然后把 probe.war 放进 <i>files</i> 目录。</p>

            <pre><code class="bash">$ unzip probe-2.1.2.zip
$ cp probe.war files/</code></pre>



         
         <h3>运行任务</h3>
         
         <p>现在我们可以在服务器上运行我们的任务了。</p>
         <p>先让我们列举一下所有任务。</p>

            <pre><code class="bash">$ rex -T
Rexfile syntax OK
Tasks
  Deploy:Live:Tomcat:deploy      Deploy probe.war to Live
  Deploy:Live:Tomcat:inject      Inject Live Configuration
  OS:prepare                     Install base packages
  OS:start-services              Start base services
  OS:tune                        Tune some /proc parameters
  Tomcat:prepare                 Install tomcat packages
  Tomcat:tomcat-user             Configure Tomcat Manager User
  mysite:deploy                  Deploy Live Tomcats
  mysite:tomcat                  Prepare Tomcat Server
  mysite:uptime                  Get uptime of server </code></pre>

         

         <p>然后开始部署服务器。</p>

            <pre><code class="bash">$ rex mysite:deploy 
Rexfile syntax OK
[2011-04-16 17:14:28] - INFO - Running task: mysite:deploy
[2011-04-16 17:14:28] - INFO - Connecting to tomcat01 (root)
[2011-04-16 17:14:28] - INFO - Running task: Deploy:Live:Tomcat:inject
[2011-04-16 17:14:29] - INFO - setting com.googlecode.psiprobe.beans.stats.collectors.memory.period to 10s (./WEB-INF/stats.properties)
[2011-04-16 17:14:29] - INFO - setting com.googlecode.psiprobe.beans.stats.collectors.cluster.period to 10s (./WEB-INF/stats.properties)
[2011-04-16 17:14:29] - INFO - setting com.googlecode.psiprobe.beans.stats.collectors.runtime.period to 10s (./WEB-INF/stats.properties)
[2011-04-16 17:14:29] - INFO - setting com.googlecode.psiprobe.beans.stats.collectors.connector.period to 10s (./WEB-INF/stats.properties)
[2011-04-16 17:14:30] - INFO - Installing ntp.
[2011-04-16 17:14:36] - INFO - Installing hal.
[2011-04-16 17:15:26] - INFO - Installing sudo.
[2011-04-16 17:15:35] - INFO - Installing tomcat6-common.
[2011-04-16 17:20:53] - INFO - Installing tomcat6.
[2011-04-16 17:21:00] - INFO - Installing tomcat6-admin.
[2011-04-16 17:21:05] - INFO - Uploadling files/tomcat-users.xml -&gt; /etc/tomcat6/tomcat-users.xml
[2011-04-16 17:21:13] - INFO - Service tomcat6 restarted.
[2011-04-16 17:21:13] - INFO - Uploadling files/probe.war -&gt; /tmp/5zttdpcya.war
[2011-04-16 17:21:13] - INFO - FAIL - No context exists for path /probe

[2011-04-16 17:21:18] - INFO - OK - Deployed application at context path /probe </code></pre>

         
         <p>你看到的这个 <i>FAIL</i> 其实是正常的，因为这是第一次部署应用。</p>

         

         <p>如果你想，你也可以在其他服务器上运行任务。比如你要部署新的服务器了。</p>

            <pre><code class="bash">$ rex -H "mynewserver" mysite:deploy</code></pre>


         

         <p>现在你可以连接上你的 tomcat 服务器了： http://tomcat01:8080/probe.</p>


