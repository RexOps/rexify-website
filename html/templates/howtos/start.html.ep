% layout 'default';
% title 'First steps guide with Rex';

% content_for header => begin
      <meta name="description" content="A first steps guide for Rex.">
      <meta name="keywords" content="Guide, Howto, First, Steps">
% end

<h1>如何开始使用 (R)?ex</h1>
<p>(R)?ex 开始第一步 参考</p>

<h2>基础架构</h2>

<p style="float: right;"><img src="/img/archi.png" /></p>

<p>(R)?ex 是一个不需要在受控主机运行客户端的服务器流程工具。它采用 ssh 方式来执行指定的命令。</p>
<p>开始使用 (R)?ex 并不需要 Perl 基础。(R)?ex 提供了简单的 DSL 来描述你的服务器。甚至，你可以在你的 shell 脚本里使用 (R)?ex，完全不需要使用 perl。</p>
<p>当然，如果你稍微懂 <a href="/howtos/perl.html">一点点 perl</a>，就更好了。</p>
<p>每个 (R)?ex 项目的起始点都是一个叫做 <i>Rexfile</i> 的文件。你可以理解他类似 Makefile。在这个文件里你定义各种任务。</p>
<p>一个 <i>任务</i> 是相关的命令的集合。比如安装一个软件包，上传配置文件，然后启动服务。你也可以在任务中调用其他任务，或者创建 <a href="/api/Rex/Transaction.pm.html">rollback szenarios</a> 来回滚执行出错的任务。</p>


<h2>要求</h2>
<p>运行 (R)?ex 不要太多预备。</p>
<h3>一台中心机器</h3>
<p>你会从自己的工作电脑或一台单独的中心机器上运行 (R)?ex。</p>
<p>你的中心 (R)?ex 机器上需要至少有个 Perl 5.8。最好是能有 Perl 5.10.1 以上的版本。</p>
<p>机器上还需要安装一些 Perl 模块。你可以通过自己发行版的仓库，或者我们的 (R)?ex 仓库来安装这些模块：</p>
<ul>
   <li><a href="https://metacpan.org/module/Net::SSH2">Net::SSH2</a></li>
   <li><a href="https://metacpan.org/module/YAML">YAML</a></li>
   <li><a href="https://metacpan.org/module/LWP">LWP</a></li>
   <li><a href="https://metacpan.org/module/DBI">DBI</a>(如果你想要数据库访问的话)</li>
   <li><a href="https://metacpan.org/module/JSON::XS">JSON::XS</a>(如果你想要使用Jiffybox云主机的话)</li>
   <li><a href="https://metacpan.org/module/XML::Simple">XML::Simple</a>(如果你想要用 FusionInventory 来采集系统信息，亚马逊云以及一些虚拟化命令的话)</li>
   <li><a href="https://metacpan.org/module/String::Escape">String::Escape</a> (如果你想在 ini 文件里定义服务器组的话)</li>
</ul>

<h3>受控端主机</h3>

<p>受控端上只需要一个 Perl5 解释器和一个可用的 SSH 账户。如果要做一些管理任务，你可能需要 root 或者 sudo 权限。</p>

<h2>准备</h2>
<p>Linux 服务器上你可以通过很简单的单行命令安装 (R)?ex。其他系统上的做法请阅读 <a href="/get/">获取 Rex</a> 页。</p>

<pre><code class="bash">$ curl -L get.rexify.org | perl - --sudo -n Rex</code></pre>

<p>这个命令会在你系统上安装好 Rex，不过你需要先安装好 libssh2 的开发包。</p>
<p><b>我们建议</b>使用 <a href="/get">源</a> 里已有的包。</p>


<h2>创建一个Rexfile</h2>
<p>第一步我们需要创建一个新目录来存储你的 Rexfile 文件。</p>
<pre><code class="bash">$ mkdir -p projects/my-first-rex-project</code></pre>
<p>Now change into this directory and create a file called <i>Rexfile</i> with the following contents:</p>

            <pre><code class="perl">user "my-user";
password "my-password";
pass_auth;

group myservers =&gt; "mywebserver", "mymailserver", "myfileserver";

desc "Get the uptime of all servers";
task "uptime", group =&gt; "myservers", sub {
   my $output = run "uptime";
   say $output;
};</code></pre>

         <p>这个例子将会用<i>my-user</i>和<i>my-password</i> 登陆 <i>myserver</i> 服务器组里的所有机器，然后执行<i>uptime</i> 命令.</p>

         <p>进入到你创建的 <i>Rexfile</i>目录下 (在终端中).</p>

            <pre><code class="bash">$ cd projects/my-first-rex-project

$ rex uptime</code></pre>

         
         <h2>添加第二task </h2>
         <p>添加第二个task,只需要在<i>Rexfile</i>下一行添加如下.</p>

            <pre><code class="perl">desc "Start Apache Service";
task "start_apache", group =&gt; "myservers", sub {
    service "apache2" =&gt; "start";
};</code></pre>

         <p>这个task 将开启在 <i>myservers</i>组里的所有服务器的 <i>apache2</i> .</p>
         
         <h2>显示所有的Rexfile 文件中的task</h2>

         <p>显示所有的Rexfile 文件中的task 可以这样做.</p>
            <pre><code class="bash">$ rex -T
Tasks
  start_apache                   Start Apache Service
  uptime                         Get the uptime of all servers
Server Groups
  myservers                       mywebserver, mymailserver, myfileserver
</code></pre>

<h2>认证</h2>
<p>前面的示例中我们演示了怎么通过用户名密码登录。其实也可以用密钥认证。</p>
<p>使用密钥认证只需要在 Rexfile 里定义你的公钥和私钥即可。</p>
<pre><code class="perl">user "my-user";
private_key "/home/user/.ssh/id_rsa";
public_key "/home/user/.ssh/id_rsa.pub";
key_auth;</code></pre>

<p>同样还可以使用带密码的密钥。修改 Rexfile 成这样：</p>
<pre><code class="perl">user "my-user";
private_key "/home/user/.ssh/id_rsa";
public_key "/home/user/.ssh/id_rsa.pub";
password "key-passphrase";
key_auth;</code></pre>


<p>如果你不想把自己的密钥密码写进 Rexfile 里，你也可以用 ssh-agent。(R)?ex 会自动在运行时候使用它，只需要删除掉那行 <i>key_auth;</i> 就行。</p>

<h2>管理服务</h2>

<p>如果你要管理服务，你经常要上传配置文件，注册服务到启动运行清单。</p>
<p>本例中，你会学到如何安装和配置 ntp 服务。你可以很容易的迁移这个例子到其他服务的配置上。</p>

<pre><code class="perl"># Rexfile
user "root";
private_key "/root/.ssh/id_rsa";
public_key "/root/.ssh/id_rsa.pub";

group all_servers =&gt; "srv[001..150]";

task "setup_ntp", group =&gt; "all_servers", sub {

   # 首先安装软件包
   install "ntpd";

   # 然后上传配置文件，文件位于 files/etc 子目录下
   file "/etc/ntp.conf",
      source    =&gt; "files/etc/ntp.conf",
      on_change =&gt; sub {
         # 定义一个 on_change 钩子，这样在文件有修改的时候 ntpd 服务自动重启
         service ntpd =&gt; "restart";
      };

   # 现在注册服务到主机启动的服务清单里
   service ntpd =&gt; ensure =&gt; "started";
};</code></pre>

<p>全部搞定。</p>
<p>这个任务可以在你的服务器上安装 ntpd，上传配置文件，启动服务。</p>
<p>你不用担心命令的顺序问题，(R)?ex 会从上到下的执行你的命令。</p>
<p>关于模块和模板的使用，请阅读 <a href="/howtos/using_templates.html">这个 howto</a>。</p>
