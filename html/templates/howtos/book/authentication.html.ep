% layout 'default';
% title 'The Rex Book / Authentication';

% content_for header => begin
      <meta name="description" content="Authentication with Rex">
      <meta name="keywords" content="Rex, Authentication">
% end

<h1>Authentication</h1>

<p>There are 4 types of authentication Rex supports with Net::SSH2 and Net::OpenSSH.</p>

<h2>Password authentication</h2>
<p>The simplest way to authenticate against your servers is to use password authentication. For this you need a valid user and a password on the remote host.</p>

<pre><code class="perl">user "root";
password "f00b4r";
pass_auth;
</code></pre>

<p>Though you don't need to specify <i>pass_auth</i> we recommend to use it. If it is not specified Rex tries multiple authentication algorithms and some servers may be configured to drop the connection after 1 or 2 failed authentication attemps.</p>

<h2>Key authentication</h2>
<p>An other simple way is to use private and public key to authenticate against your servers. To do this you have to define the full path to your private key file and to your public key file.</p>
<p>If you don't have a public key file you have to create it.</p>
<pre><code class="bash">$ sshkey-gen -y -f /path/to/your/private.key &gt;public.key</code></pre>

<p>To use this authentication algorithm you can use the following code snippet.</p>
<pre><code class="perl">user "root";
private_key "/path/to/your/private.key";
public_key "/path/to/your/public.key";
key_auth;</code></pre>

<p>Though you don't need to specify <i>key_auth</i> we recommend to use it. If it is not specified Rex tries multiple authentication algorithms and some servers may be configured to drop the connection after 1 or 2 failed authentication attemps.</p>

<p>If you have a specified a password for your private key, you can set this via the <i>password</i> directive.</p>
<pre><code class="perl">user "root";
private_key "/path/to/your/private.key";
public_key "/path/to/your/public.key";
password "your-key-passphrase";
key_auth;</code></pre>


<h2>Agent authentication</h2>
<p>If you don't want to use any of the above methods, you can use agent authentication. If you need agent forwarding on your servers this will only work with <i>Net::OpenSSH</i>.</p>

<p>To use agent authentication make sure the agent is running on your system.</p>
<pre><code class="perl">user "root";
private_key "/path/to/your/private.key";
public_key "/path/to/your/public.key";</code></pre>

<p>As you see, this is the same as with key authentication. But you have to omit the <i>key_auth</i> line.</p>

<h2>Kerberos authentication</h2>

<p>As of version 0.42 Rex supports Kerberos authentication though <i>Net::OpenSSH</i> module. To use this you have to set the connection type to use Net::OpenSSH.</p>
<p>Also make sure that your servers support Kerberos authentication.</p>

<pre><code class="perl">set connection =&gt; "OpenSSH";
user "root";
krb5_auth;</code></pre>

<p>Here you have to use <i>krb5_auth</i> to tell Rex to use it.</p>

<p><hr><a href="/howtos/book.html">Table of Contents</a> </p>
