% layout 'default';
% title 'The Rex Book / Authentication';

% content_for header => begin
      <meta name="description" content="Authentication with Rex">
      <meta name="keywords" content="Rex, Authentication">
% end

<h1>认证</h1>

<p>通过 Net::SSH2 和 Net::OpenSSH 模块，Rex 支持 4 种认证方式。</p>

<h2>密码认证</h2>
<p>最简单的认证方式就是用密码。你需要一个可用的目的主机用户名和密码。</p>

<pre><code class="perl">user "root";
password "f00b4r";
pass_auth;
</code></pre>

<p>虽然其实并不用特意指明 <i>pass_auth</i> ，不过我们建议还是写清楚比较好。Rex 会尝试使用多种认证算法，而有些服务器可能配置成一两次失败后就断开你的连接了。</p>

<h2>密钥认证</h2>
<p>另一个比较简单的方式是使用私钥和公钥来做服务器认证。你需要定义自己的私钥文件和公钥文件的具体路径。</p>
<p>如果你还没有公钥，需要先创建一对。</p>
<pre><code class="bash">$ sshkey-gen -y -f /path/to/your/private.key &gt;public.key</code></pre>

<p>使用这个认证方式需要使用如下代码片段：</p>
<pre><code class="perl">user "root";
private_key "/path/to/your/private.key";
public_key "/path/to/your/public.key";
key_auth;</code></pre>

<p>虽然其实并不用特意指明 <i>key_auth</i> ，不过我们建议还是写清楚比较好。Rex 会尝试使用多种认证算法，而有些服务器可能配置成一两次失败后就断开你的连接了。</p>

<p>如果你的私钥也有设定密码，你可以通过 <i>password</i> 指令来预先设置。</p>
<pre><code class="perl">user "root";
private_key "/path/to/your/private.key";
public_key "/path/to/your/public.key";
password "your-key-passphrase";
key_auth;</code></pre>


<h2>客户端认证</h2>
<p>如果你不想使用上面哪些方式，你可以使用客户端认证。你需要在服务器上都开启客户端转发，而且这种方式仅在 <i>Net::OpenSSH</i> 下有效工作。</p>

<p>要使用客户端认证请确认系统上运行了客户端。</p>
<pre><code class="perl">user "root";
private_key "/path/to/your/private.key";
public_key "/path/to/your/public.key";</code></pre>

<p>如你所见，这个配置跟密钥认证方式一样，不过你不能再写 <i>key_auth</i> 这行了。</p>

<h2>Kerberos 认证</h2>

<p>从 Rex 0.42 版本开始，支持通过 <i>Net::OpenSSH</i> 模块使用 Kerberos 认证。要使用这种方式你要指明连接类型来使用 Net::OpenSSH。</p>
<p>同样还需要确认的是你的服务器本身支持 Kerberos 认证。</p>

<pre><code class="perl">set connection =&gt; "OpenSSH";
user "root";
krb5_auth;</code></pre>

<p>这里你必须用 <i>krb5_auth</i> 来告诉 Rex 使用这种方式。</p>

<p><hr><a href="/howtos/book.html">Table of Contents</a> </p>
