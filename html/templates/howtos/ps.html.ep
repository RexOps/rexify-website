% layout 'default';
% title 'An example of process management with Rex';

% content_for header => begin
      <meta name="description" content="(R)?ex - manage all your boxes from a central point - Process Management">
      <meta name="keywords" content="Process, Management, ps, kill, killall">
% end

         <h1>Listing all running processes</h1>
         <p>To list all running process you can use the <i>ps</i> function. It will return an array of hashs with all information about the processes.</p>

            <pre><code class="perl">use Rex::Commands::Process;

user "my-user";
password "my-password";
pass_auth;

group myserver =&gt; "mywebserver", "mymailserver", "myfileserver";

desc "List all running processes";
task "ps", group =&gt; "myserver", sub {

   for my $process ( ps() ) {
      say "command: " . $process-&gt;{"command"};
      say "pid    : " . $process-&gt;{"pid"};
      say "user   : " . $process-&gt;{"user"};
   }

};</code></pre>

         

         <p>If you want to see all the available options just use the <i>Data::Dumper</i> module.</p>

            <pre><code class="perl">use Rex::Commands::Process;
use Data::Dumper;
            
user "my-user";
password "my-password";
pass_auth;

group myserver =&gt; "mywebserver", "mymailserver", "myfileserver";

desc "List all running processes";
task "ps", group =&gt; "myserver", sub {
   for my $process ( ps() ) {
      say Dumper($process);
   }
};</code></pre>


         <h2>Getting the PID of a programm</h2>
         <p>If you want to get the pid of a running programm you can use the perl function <i>grep</i>.</p>

            <pre><code class="perl">use Rex::Commands::Process;
            
user "my-user";
password "my-password";
pass_auth;

group myserver =&gt; "mywebserver", "mymailserver", "myfileserver";

desc "Get all PIDs of apache";
task "ps", group =&gt; "myserver", sub {
   my @apaches = grep { $_-&gt;{"command"} =~ m/httpd/ } ps();

   for my $apache (@apaches) {
      say "PID: " . $apache-&gt;{"pid"};
   }
}; </code></pre>


