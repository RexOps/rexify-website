% layout 'default';
% title '用 Rex 来部署你的应用';

% content_for header => begin
      <meta name="description" content="Rex - Application Deployment">
      <meta name="keywords" content="Rex, Deploy, Tomcat, Server, Linux, Remote, Automation, Rexfile, Example">
% end

         <h1>应用部署</h1>

         <p>如果你要部署 PHP, Rails, Tomcat 或者 Perl 应用，这个模块能帮助你自动化你的部署任务。</p>
         <p>你可以从 <a href="https://github.com/Krimdomu/rex-apache-deploy">github</a> 上下载这个模块。</p>
         <p>也有已经提前构建好的包。更多信息见 <a href="/get/">获取</a> 页。</p>
         

         <h2>查看所有命令</h2>
         
            <ul>
               <li><a href="/api/Rex/Apache/Build.pm.html">构建命令</a>
               <li><a href="/api/Rex/Apache/Deploy.pm.html">部署命令</a>
               <li><a href="/api/Rex/Apache/Inject.pm.html">配置注入命令</a>
            </ul>

         

         <h2>安装</h2>

         <p>你可以脱离我们的仓库自己安装这个模块。更多信息见 <a href="/get/">获取 Rex</a> 页。</p>

         
         <h2>示例</h2>


         <h3>简单的 PHP 部署</h3>

         

         <p>如果你想部署你的 PHP 项目，只要在你项目的顶层目录里创建一个文件叫 <i>Rexfile</i>。然后按照下面步骤开始：</p>
         

         <h4>打包</h4>

         <p>创建一个构建任务。这个任务将会构建一个 tar.gz 的归档，包含有你的应用代码用来分发。比如说你可以把这个文件交给你的系统管理员。</p>
         <p>如果你想压缩你的 JavaScript 和 CSS 文件，只要下载 yuicompressor 然后放到你文件系统的某个地方，当然你还得安装好一个最新的 Java。</p>

            <pre><code class="perl">use Rex -feature =&gt; ['1.0'];

use Rex::Apache::Build;

# 设置 yuicompressor.jar 文件路径
yui_path "./yuicompressor.jar";

# 从 index.php 里获取应用的版本号
# 通过搜索字符串 $VERSION = "foobar"; 然后获取到具体的 "foobar"
# 比如 $VERSION = "1.0";
get_version_from "index.php", qr{\$VERSION = "([^"]+)";};

desc "Build a new package";
task "build", sub {
       
   # 压缩 public/js 里所有的 *.js 文件
   # 压缩 public/css 里所有的 *.css 文件
   yui compress =&gt; glob("public/js/*.js"), glob("public/css/*.css");
       
   # 打包
   build;
}; </code></pre>

         
         <h4>上传到服务器</h4>
         <p>现在，你打包完了，就需要上传到你的服务器上。</p>
         <p>把下面这行添加到之前那些 <i>use</i> 下面。</p>

            <pre><code class="perl">use Rex::Apache::Deploy Symlink;</code></pre>

         
         <p>注意要指定连接你服务器的 ssh 用户和用户密钥。这段需要放到打包任务之前。</p>

            <pre><code class="perl">user "deploy";
public_key "/home/deploy/.ssh/id_rsa.pub";
private_key "/home/deploy/.ssh/id_rsa";</code></pre>

         
         <p>把所有服务器定义成组，就不用每次都写一大串了。下面把服务器 <i>php01, php02, php03 and php04</i> 都放进一个叫 <i>php</i> 的组里。</p>

            <pre><code class="perl">group "php" =&gt; "php[01..04]";</code></pre>
         

         <p>现在指定部署的目录。(这个目录不能使你的 DocumentRoot。因为 DocumentRoot 将会是一个指向你要部署的某个版本的应用的软连接。这样你可以非常容易的快速回退你的部署。) 然后再指定 DocumentRoot。</p>

            <pre><code class="perl">deploy_to "/var/deploy";
document_root "/var/www/html";</code></pre>

         

         <p>现在创建部署任务。这个任务将会上传打包好的应用到 <i>php</i> 组的服务器上。然后解压到 <i>deploy_to</i> 目录下的子目录里。 (子目录命名为你应用的版本号) 然后把你的 DocumentRoot 指向到这个新上传的版本。</p>

            <pre><code class="perl">task "deploy", group =&gt; "php", sub {
   deploy;
};</code></pre>

         

         <h4>运行任务</h4>
         <p>现在你可以通过<i>rex taskname</i>命令运行任务。或者通过<i>rex -T</i> 列举所有任务。</p>
            <pre><code class="bash">$ rex build deploy</code></pre>



         
         <h3>简单的 Tomcat 部署</h3>
         

         <p>这个示例将会部署 <i>myapp-1.0.war</i> 到 <i>tomcat01, tomcat02, tomcat03</i> 和 <i>tomcat04</i> 服务器上。它将通过 <i>Tomcat Manager</i> 来帮助部署应用到指定的 <i>/myapp</i> 路径。</p>

            <pre><code class="perl">use Rex -feature =&gt; ['1.0'];

use Rex::Apache::Deploy Tomcat;

# 应用版本
my $VERSION = "1.0";

user "deploy";
public_key "/home/deploy/.ssh/id_rsa.pub";
private_key "/home/deploy/.ssh/id_rsa";

group "tomcat" =&gt; "tomcat[01..04]";

parallelism 4;

context_path "/myapp";

desc "Deploy Application";
task "deploy", group =&gt; "tomcat", sub {
   deploy "myapp-$VERSION.war",
      username =&gt; "manager-user",
      password =&gt; "manager-password",
      port     =&gt; 8080;   
};</code></pre>


